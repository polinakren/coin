/* tslint:disable */
/* eslint-disable */
/**
 * Crypto API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApiCoinsGet200ResponseDataInner
 */
export interface ApiCoinsGet200ResponseDataInner {
    /**
     * Идентификатор монеты
     * @type {number}
     * @memberof ApiCoinsGet200ResponseDataInner
     */
    id: number;
    /**
     * Название монеты
     * @type {string}
     * @memberof ApiCoinsGet200ResponseDataInner
     */
    title: string;
    /**
     * Поддерживаемая сеть (1 - ERC20, 2 - BEP20, 3 - TRC20)
     * @type {number}
     * @memberof ApiCoinsGet200ResponseDataInner
     */
    network: ApiCoinsGet200ResponseDataInnerNetworkEnum;
    /**
     * Статус монеты (1 - Доступна, 2 - В обработке, 3 - Недоступна)
     * @type {number}
     * @memberof ApiCoinsGet200ResponseDataInner
     */
    status: ApiCoinsGet200ResponseDataInnerStatusEnum;
}


/**
 * @export
 */
export const ApiCoinsGet200ResponseDataInnerNetworkEnum = {
    NUMBER_1: 1,
    NUMBER_2: 2,
    NUMBER_3: 3
} as const;
export type ApiCoinsGet200ResponseDataInnerNetworkEnum = typeof ApiCoinsGet200ResponseDataInnerNetworkEnum[keyof typeof ApiCoinsGet200ResponseDataInnerNetworkEnum];

/**
 * @export
 */
export const ApiCoinsGet200ResponseDataInnerStatusEnum = {
    NUMBER_1: 1,
    NUMBER_2: 2,
    NUMBER_3: 3
} as const;
export type ApiCoinsGet200ResponseDataInnerStatusEnum = typeof ApiCoinsGet200ResponseDataInnerStatusEnum[keyof typeof ApiCoinsGet200ResponseDataInnerStatusEnum];


/**
 * Check if a given object implements the ApiCoinsGet200ResponseDataInner interface.
 */
export function instanceOfApiCoinsGet200ResponseDataInner(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "network" in value;
    isInstance = isInstance && "status" in value;

    return isInstance;
}

export function ApiCoinsGet200ResponseDataInnerFromJSON(json: any): ApiCoinsGet200ResponseDataInner {
    return ApiCoinsGet200ResponseDataInnerFromJSONTyped(json, false);
}

export function ApiCoinsGet200ResponseDataInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiCoinsGet200ResponseDataInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'network': json['network'],
        'status': json['status'],
    };
}

export function ApiCoinsGet200ResponseDataInnerToJSON(value?: ApiCoinsGet200ResponseDataInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'title': value.title,
        'network': value.network,
        'status': value.status,
    };
}

